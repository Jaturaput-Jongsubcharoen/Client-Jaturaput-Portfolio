/* Let grid children shrink; prevents implicit extra columns on mobile */
.grid-container > * {
  min-width: 0;
  min-height: 0;
}

/* Isolate each child’s internal layout so hover animations can't bubble out */
/*.grid-container > * { contain: layout paint style; }*/

/* Container (your existing rules OK) */
.grid-container {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: repeat(6, 1fr);
  height: 100dvh;
  position: relative;
  background: linear-gradient(454deg, #363636, #ffffff);
  z-index: 0;
}

/* Each cell explicit, sits below the photo */
.grid-item {
  border: 1px solid #000;
  background: none;
  color: #fff;
  display: flex; 
  align-items: center;
  justify-content: center;
  will-change: transform;
  position: relative;       /* enables z-index */
  z-index: 10;               /* base layer */
  transition: all 0.3s ease;
}

/* highlight without changing layout */
.grid-item::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 12px;
  background: rgba(255,255,255,0.10);
  box-shadow: 0 0 14px rgba(0,0,0,0.8);
  opacity: 0;
  transition: opacity .2s ease, transform .2s ease;
  pointer-events: none;
}


.grid-item:hover {
  margin: 6px;                 /* adds spacing inside the grid cell */
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.1); /* optional highlight */
  box-shadow: 0 0 14px rgba(0, 0, 0, 0.8);
  transform: scale(0.98);
}

.grid-item:hover::after {
  opacity: 1;
}

.hamburger-cell {
  grid-row: 1 / 2;
  grid-column: 1 / 2;
  display: flex; 
  align-items: center; 
  justify-content: center;
  z-index: 1003;
}



/* Photo overlaps the cells it sits on */
.profile-img-box {
  grid-row: 2 / 6;          /* rows 3–5 */
  grid-column: 3 / 7;       /* cols 4–6 */
  position: relative;
  z-index: 5;              /* above .grid-item */
  display: flex; align-items: center; justify-content: center;
}
.profile-img-box img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.grid-container > .profile-img-box {
  grid-area: 2 / 3 / 6 / 7;         /* rows 3–5, cols 4–6 */
  position: relative;
  z-index: 5;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 0;
  min-height: 0;
}
.grid-container > .profile-img-box img {
  width: 100%;
  height: 100%;
  display: block;
  object-fit: cover;
}

.title1-box--p { grid-area: 2 / 2 / 3 / 3; } /* P */
.title2-box--p { grid-area: 3 / 3 / 4 / 4; } /* O */
.title3-box--p { grid-area: 4 / 4 / 5 / 5; } /* R */
.title4-box--p { grid-area: 5 / 5 / 6 / 6; } /* T */

/* Make sure the cubes sit above the tiles */
.title1-box { z-index: 500; }

/* Phone: 3 columns; keep overlap using grid lines only */
@media (max-width: 768px) {
  .grid-container {
    grid-template-columns: repeat(4, minmax(0, 1fr)); /* was 3 */
    grid-template-rows: none;
    grid-auto-rows: 1fr;
    height: auto;
    overflow-y: auto;
  }


  /* REMOVE the old phone block that said:
     .profile-img-box { grid-column: 4 / 7; ... }  <- this conflicts on mobile
     Keep just this single override: */
  .grid-container > .profile-img-box {
    grid-area: 2 / 1 / 6 / 5;  /* rows 3–5, ALL 4 columns */
    min-width: 0;
    min-height: 0;
  }

  /* project panel: rows 6–8 (6/9), ALL 4 columns */
  .grid-container > .project-panel {
    grid-area: 7 / 1 / 11 / 5;  /* was ... / 4 */
    align-self: stretch;
    justify-self: stretch;
    width: 100%;
    height: 100%;
    border-radius: 12px;
    min-width: 0;
    min-height: 0;
    z-index: 12;
  }

  .project-panel__layout { padding: .75rem; }

  /* details panel under it */
  .grid-container > .detail-panel {
    grid-area: 11 / 1 / 15 / 5; /* was ... / 4 */
    align-self: stretch;
    justify-self: stretch;
    min-width: 0;
    min-height: 0;
    z-index: 14;
  }
  .detail-panel .detail-panel__box { inset: 0.5rem; padding: .75rem; }

  /* Diagonal letters across 4 columns now */
  .title1-box--p { grid-area: 2 / 1 / 3 / 2; } /* P = row1 col1 */
  .title2-box--p { grid-area: 3 / 2 / 4 / 3; } /* O = row2 col2 */
  .title3-box--p { grid-area: 4 / 3 / 5 / 4; } /* R = row3 col3 */
  .title4-box--p { grid-area: 5 / 4 / 6 / 5; } /* T = row4 col4 */

  /* (Optional) touch behavior for the color-slice tiles */
  @media (hover: none), (pointer: coarse) {
    .grid-container .profile-hit::after { opacity: 0; }
    .grid-container .profile-hit:active::after { opacity: 1; filter: none; }
  }
}