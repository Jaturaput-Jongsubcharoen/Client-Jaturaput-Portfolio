.hamburger {
  position: fixed;
  top: 1rem;
  left: 1rem;
  width: 40px;
  height: 36px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: none;
  cursor: pointer;
  z-index: 1003;
  color: #ffffff;
}

.hamburger.is-open { 
    left: calc(280px + 12px); 
}

.sr-only {
  position: absolute;
  width: 1px; 
  height: 1px; 
  padding: 0; 
  margin: -1px;
  overflow: hidden; 
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; 
  border: 0;
}

.backdrop {
  position: fixed; 
  inset: 0;
  background: rgba(0,0,0,.4);
  color: #ffffff;
  z-index: 1000;
}

.drawer {
  position: fixed; top: 0; left: 0;
  color: #ffffff;
  height: 100vh; 
  width: 280px; 
  max-width: 85vw;
  background: #000000; 
  box-shadow: 2px 0 24px rgba(0,0,0,.15);
  padding: 2rem 1.25rem; 
  z-index: 1002;
  animation: slide-in .25s ease-out forwards;
  display: flex; 
  align-items: flex-start; 
  justify-content: flex-start;
}

@keyframes slide-in { 
    from { 
        transform: translateX(-100%);
    } to { 
        transform: translateX(0);
    } 
}

.drawer ul {
  list-style: none; 
  margin: 0; 
  padding: 3rem 0 0 0;
  display: flex; 
  flex-direction: column; 
  gap: 1rem;
}
.drawer a {
  text-decoration: none; 
  font-size: 1.1rem; 
  color: #ffffff;
  padding: .25rem .125rem; 
  border-radius: 6px;
}
.drawer a:hover, .drawer a:focus { 
    background: #000000; 
    outline: none; 
}

@media (max-width: 330px) {
  .drawer { 
    width: 85vw; 
  }
  .hamburger.is-open { 
    left: calc(85vw + 12px); 
  }
}

/* new header inside the drawer */
.drawer-header {
  width: 100%;
  display: flex;
  justify-content: flex-end; /* push X to the right */
  margin-bottom: 1rem;
}

/* style the close button */
.close-btn {
  background: transparent;
  border: none;
  cursor: pointer;
  color: #fff;   /* or #000 if drawer bg is light */
  font-size: 1.5rem;
}


/*---------------------------------------------------*/

/* place the component into the grid's top-left cell */
.hamburger-cell {
  grid-row: 1 / 2;
  grid-column: 1 / 2;
  align-self: start;
  justify-self: start;
  z-index: 1003;        /* above grid tiles */
  padding: 6px;         /* nice breathing room inside the cell */
}

/* the button itself sits inside the cell */
.hamburger {
  position: relative;   /* not fixed; lives in the grid cell */
  width: 40px;
  height: 36px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: none;
  cursor: pointer;
  color: #fff;          /* icon color */
}

/* screen-reader only text */
.sr-only {
  position: absolute; 
  width:1px; 
  height:1px; 
  padding:0; 
  margin:-1px;
  overflow:hidden; 
  clip:rect(0,0,0,0); 
  white-space:nowrap; 
  border:0;
}

/* overlay & drawer remain fixed so they cover the whole viewport */
.backdrop {
  position: fixed; 
  inset: 0; 
  background: rgba(0,0,0,.4); 
  z-index: 1000;
}
.drawer {
  position: fixed; 
  top: 0; 
  left: 0; 
  height: 100vh; 
  width: 280px; 
  max-width: 85vw;
  background: #111; 
  color: #fff; 
  box-shadow: 2px 0 24px rgba(0,0,0,.15);
  padding: 2rem 1.25rem; 
  z-index: 1002; 
  animation: slide-in .25s ease-out forwards;
  display: flex; 
  align-items: flex-start; 
  justify-content: flex-start;
}

@keyframes slide-in { 
  from { transform: translateX(-100%);
  } to { transform: translateX(0);
  } 
}
.drawer ul { 
  list-style:none; margin:0; padding:0; display:flex; flex-direction:column; gap:1rem; 
}
.drawer a, .drawer a:visited { 
  color:#fff; 
  text-decoration:none; 
  font-size:1.1rem; 
}

.drawer a:hover, .drawer a:focus { 
  background: rgba(255,255,255,.12); 
  border-radius:6px; 
  outline:none; 
}

/* phone: grid is 3 cols; keep the hamburger in the same (1,1) cell */
@media (max-width: 768px) {
  .hamburger-cell { 
    padding: 8px; 
  }
}